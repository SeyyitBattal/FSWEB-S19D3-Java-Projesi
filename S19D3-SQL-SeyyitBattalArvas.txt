1) ÖRNEK SORU: Yazar tablosunu KEMAL UYUMAZ isimli yazarı ekleyin.
INSERT INTO yazar(yazarad, yazarsoyad)
VALUES ('KEMAL', 'UYUMAZ')


2) Biyografi türünü tür tablosuna ekleyiniz.
INSERT INTO tur(turadi)
VALUE ('Biyografi')


3) 10A sınıfı olan ÇAĞLAR ÜZÜMCÜ isimli erkek, sınıfı 9B olan LEYLA ALAGÖZ isimli kız ve sınıfı 11C olan Ayşe Bektaş isimli kız öğrencileri tek sorguda ekleyin. 
INSERT INTO ogrenci (ograd, ogrsoyad, cinsiyet, sinif)
VALUES
('ÇAĞLAR', 'ÜZÜMCÜ', 'E', '10A'),
('LEYLA', 'ALAGÖZ', 'K', '9B'),
('Ayşe', 'Bektaş', 'K', '11C')


4) Öğrenci tablosundaki rastgele bir öğrenciyi yazarlar tablosuna yazar olarak ekleyiniz.
INSERT INTO yazar (yazarad, yazarsoyad)
SELECT ograd, ogrsoyad FROM ogrenci
ORDER BY RAND()
LIMIT 1;


5) Öğrenci numarası 10 ile 30 arasındaki öğrencileri yazar olarak ekleyiniz.
INSERT INTO yazar(yazarad, yazarsoyad) 
SELECT ograd,ogrsoyad FROM ogrenci 
WHERE ogrno BETWEEN 10 AND 30


6) Nurettin Belek isimli yazarı ekleyip yazar numarasını yazdırınız.
(Not: Otomatik arttırmada son arttırılan değer @@IDENTITY değişkeni içinde tutulur.)
???
INSERT INTO yazar(yazarad, yazarsoyad) 
VALUES ('Nurettin', 'Belek') RETURNING yazarno


7) 10B sınıfındaki öğrenci numarası 3 olan öğrenciyi 10C sınıfına geçirin.
UPDATE ogrenci 
SET sinif = '10C'
WHERE ogrno = '3' AND sinif = '10B'


8) 9A sınıfındaki tüm öğrencileri 10A sınıfına aktarın
UPDATE ogrenci 
SET sinif = '10A'
WHERE sinif = '9A'


9) Tüm öğrencilerin puanını 5 puan arttırın.
UPDATE ogrenci 
SET puan = puan+5

10) 25 numaralı yazarı silin.
DELETE FROM yazar 
WHERE yazarno='25'


11) Doğum tarihi null olan öğrencileri listeleyin. (insert sorgusu ile girilen 3 öğrenci listelenecektir)
SELECT * FROM ogrenci 
WHERE dtarih is null


12) Doğum tarihi null olan öğrencileri silin. 
DELETE from ogrenci
WHERE dtarih is null


13) Kitap tablosunda adı a ile başlayan kitapların puanlarını 2 artırın.
UPDATE kitap
SET puan = puan + 2
WHERE kitapadi LIKE 'A%';


14) Kişisel Gelişim isimli bir tür oluşturun.
INSERT INTO tur(turadi)
VALUES('Kişisel Gelişim')


15) Kitap tablosundaki Başarı Rehberi kitabının türünü bu tür ile değiştirin.
UPDATE kitap 
SET turno = (
    SELECT turno 
    FROM tur 
    WHERE turadi = 'Kişisel Gelişim'
) 
WHERE kitapadi = 'Başarı Rehberi'


16) Öğrenci tablosunu kontrol etmek amaçlı tüm öğrencileri görüntüleyen "ogrencilistesi" adında bir prosedür oluşturun.
CREATE FUNCITON ogrencilistesi()
RETURNS SETOF ogrenci
LANGUAGE 'sql'
AS $BODY$
	SELECT * FROM ogrenci
$BODY$;
SELECT * FROM ogrencilistesi()


17) Öğrenci tablosuna yeni öğrenci eklemek için "ekle" adında bir prosedür oluşturun.
CREATE PROCEDURE ekle (ogrAd character varying, ogrSoyad character varying, gender character varying, dTarih date, class character varying, point smallint) 
LANGUAGE 'sql'
AS $BODY$
    INSERT INTO ogrenci (ograd, ogrsoyad, cinsiyet, dtarih, sinif, puan) 
    VALUES (ogrAd, ogrSoyad, gender, dTarih, class, point);
$BODY$;


18) Öğrenci noya göre öğrenci silebilmeyi sağlayan "sil" adında bir prosedür oluşturun.
CREATE PROCEDURE sil (ogr_number smallint)
LANGUAGE 'sql'
AS $BODY$
	DELETE FROM ogrenci
	WHERE ogrno = ogr_number
$BODY$
CALL sil(103)


19) Öğrenci numarasını kullanarak kolay bir biçimde öğrencinin sınıfını değiştirebileceğimiz bir prosedür oluşturun.
CREATE PROCEDURE 
updateClass (ogr_number smallint, ogr_sinif character varying)
LANGUAGE 'sql'
AS $BODY$
	UPDATE ogrenci
	SET sinif = ogr_sinif
	WHERE ogrno = ogr_number
$BODY$
CALL updateClass(104, '10B')


20) Öğrenci adı ve soyadını "Ad Soyad" olarak birleştirip, ad soyada göre kolayca arama yapmayı sağlayan bir prosedür yazın.
CREATE FUNCTION aramaYap(full_name character varying)
RETURNS SETOF ogrenci
LANGUAGE 'sql'
AS $BODY$
	SELECT * FROM ogrenci
	CONCAT(ograd, ' ', ogrsoyad) 
	ILIKE CONCAT('%', full_name , '%')
$BODY$


21) Daha önceden oluşturduğunu tüm prosedürleri silin.
DROP PROCEDURE IF EXISTS ekle;
DROP PROCEDURE IF EXISTS sil;
DROP PROCEDURE IF EXISTS updateClass;


#Esnek görevler (Esnek görevlerin hepsini Select in Select ile gerçekleştirmeniz beklenmektedir.)
22) Select in select yöntemiyle dram türündeki kitapları listeleyiniz.
SELECT kitapadi
FROM kitap
WHERE turno = (SELECT turno FROM tur WHERE turadi = 'Dram');
--OR
SELECT k.kitapadi, t.turadi FROM kitap AS k
INNER JOIN tur AS t
ON k.turno = t.turno
WHERE turadi = 'Dram'


23) Adı e harfi ile başlayan yazarların kitaplarını listeleyin.
SELECT kitapadi 
FROM kitap 
WHERE yazarno IN (SELECT yazarno FROM yazar WHERE yazarad LIKE 'E%');
--OR
SELECT k.kitapadi, y.yazarad FROM kitap AS k 
INNER JOIN yazar AS y 
ON k.yazarno = y.yazarno
WHERE yazarad LIKE 'E%'


24) Kitap okumayan öğrencileri listeleyiniz.
SELECT * FROM ogrenci 
WHERE ogrno NOT IN (SELECT DISTINCT ogrno FROM kitap);


25) Okunmayan kitapları listeleyiniz
SELECT * FROM kitap 
WHERE kitapno NOT IN (SELECT DISTINCT kitapno FROM islem);


26) Mayıs ayında okunmayan kitapları listeleyiniz.
SELECT * FROM kitap
WHERE kitapno IN (SELECT kitapno FROM islem 
WHERE EXTRACT(MONTH from atarih::timestamp) != 5 
AND EXTRACT(MONTH from vtarih::timestamp) != 5)

